<program> -> VAR_GLOBAL OpenBrace <var_global_block> CloseBrace DECLARATION OpenBrace <declaration_block> CloseBrace INSTRUCTION OpenBrace <instruction_block> CloseBrace

// Blocks
	<var_global_block> -> <declaration> <var_global_block> | ε

	<declaration_block> -> <declaration> <declaration_block> | ε

	<instruction_block> -> <instruction> <instruction_block> | ε


	<var_list> -> <simple_var> | <array_var>

    <simple_var> -> IDENTIFIER Comma <var_list>
		          | IDENTIFIER
		          | <assignment>
		          | <assignment> Comma <var_list>


    <array_var> -> <array_identifier> Comma <var_list>
                 | <array_identifier> CloseBracket
                 | <array_identifier> Assign OpenBracket <expr_list_array> CloseBracket
                 | <array_identifier> Assign OpenBracket <expr_list_array> CloseBracket Comma <var_list>

    <array_identifier> -> IDENTIFIER OpenBracket <Expression> CloseBracket

    <expr_list_array> -> <Expression> Comma <expr_list_array>
                       | <Expression>

    <assign_list> -> <assignment>
                   | <assignment> Comma <assign_list>

	<assignment> -> IDENTIFIER Assign <Expression>
	<array_assignment> -> IDENTIFIER OpenBracket <Expression> CloseBracket Assign <Expression>

	<type> -> IntegerType
		    | FloatType
		    | CharType

	<declaration> -> <type> <var_list> Semicolon
			       | CONST <type> <assign_list> Semicolon

 	<INSTRUCTION> -> <Assign_Instr>
    			   | <IfStatement>
			       | <ForLoop>
			       | <ReadStatement>
			       | <WriteStatement>

    // Assign_Instr
	<Assign_Instr> -> <assignment> Semicolon
	                | <array_assignment> Semicolon

  	<Expression> -> <Expression> <Sign> <Term> | <Term>

	<Term> -> <Term> Multiply <Factor>  | <Term> Divide <Factor>  | <Factor>

	<Factor> -> OpenParen <Expression> CloseParen  | Identifier  | <INTEGER> | <FLOAT> | Char
    <INTEGER> -> Integer
               | OpenParen <Sign> Integer CloseParen
    <FLOAT> -> Float
             | OpenParen <Sign> Float CloseParen
    <Sign> -> Plus | Minus

    //IF
	<IfStatement> -> If OpenParen <Condition> CloseParen OpenBrace <Instruction_block> CloseBrace <ElseBlock>

	<ElseBlock> -> Else OpenBrace <Instruction_block> CloseBrace | ε


    // Condition
	<Condition> -> Not <BasicCondition> | <BasicCondition> | <Condition> <LogicalOperator> <Condition>

	<BasicCondition> -> <Expression> <RelationalOperator> <Expression>  | OpenParen <Condition> CloseParen

	<RelationalOperator> -> GreaterThan | LessThan | GreaterEqual  | LessEqual  | Equal  | NotEqual

	<LogicalOperator> -> And  | Or


    // Loop
	<loop_assign> -> Identifier Assign <Expression>
	<ForLoop> -> For OpenParen <loop_assign> Colon <Expression> Colon <Expression> CloseParen OpenBrace <instruction_block> CloseBrace


    // Read
	<ReadStatement> -> Read OpenParen Identifier CloseParen Semicolon


    // Write
	<WriteStatement> -> Write OpenParen <WriteElementList> CloseParen Semicolon

   	<WriteElementList> -> <WriteElement> Comma <WriteElementList>  | <WriteElement>

	<WriteElement> -> StringLiteral | Identifier
